ファイル管理器とは
	単一種類

	-コンフィグ=コンフィグという設定ファイルを作ったもの
	-メインコンフィグ管理器=メインコンフィグ管理器というコンフィグチェッカーを作ったもの
	-メインコンフィグアプリ情報項目={「Version」=[アプリのバージョン],「InternalVersion」=[アプリの内部バージョン]}
	-メインコンフィグ設定項目={ //ファイル名生成関連設定
		「FilenameGenerator.Preset.Format.Text」=「:1:-:2:_:年::月::日::拡張子:」,
		「FilenameGenerator.Preset.Format.WithoutSpace」=「○」,
		「FilenameGenerator.Preset.Genre.Name」=「ゲーム」,
		「FilenameGenerator.Preset.Genre.Index」=「1」,
		「FilenameGenerator.Preset.Type_1.Name」=「Apex Legends」,
		「FilenameGenerator.Preset.Type_1.Index」=「1」,
		「FilenameGenerator.Preset.Type_2.Name」=「Bloodhound」,
		「FilenameGenerator.Preset.Type_2.Index」=「2」,
		「FilenameGenerator.Preset.Custom_1.Text」=「」,
		「FilenameGenerator.Preset.Custom_2.Text」=「」,
		「FilenameGenerator.Preset.FilenameExtension.Name」=「.ai」,
		「FilenameGenerator.Preset.FilenameExtension.Index」=「2」,
		//サウンドデバイスマネージャー関連設定
		「SoundDeviceManager.RenderDevice.DefaultDevice.Index」=「1」,
		「SoundDeviceManager.RenderDevice.DefaultCommunicationDevice.Index」=「1」,
		「SoundDeviceManager.CaptureDevice.DefaultDevice.Index」=「1」,
		「SoundDeviceManager.CaptureDevice.DefaultCommunicationDevice.Index」=「1」
	}

	+メインコンフィグ設定:辞書

	自分でファイルチェックする手順 //フォルダー&コンフィグ&プリセットのチェック
		メインコンフィグ管理器の設定ファイル名=コンフィグ
			
		////フォルダーチェック////
			もしアプリのコンフィグフォルダーが存在しないならアプリのコンフィグフォルダーを作成する	//ドキュメントフォルダーへアプリ名のフォルダーが存在しない場合、フォルダーを作成する
			もしアプリのプリセットフォルダーが存在しないならアプリのプリセットフォルダーを作成する	//ドキュメントフォルダーへプリセットフォルダーが存在しない場合、フォルダーを作成する
			もしアプリのアップデートフォルダーが存在しないならアプリのアップデートフォルダーを作成する//ドキュメントフォルダーへアップデートフォルダーが存在しない場合、フォルダーを作成する
			もしアプリのリソースフォルダーが存在しないならアプリのリソースフォルダーを作成する//アプリの位置へリソースフォルダーが存在しない場合、フォルダーを作成する
			もし「[アプリのリソースフォルダー]Modules」というフォルダが存在しないなら「[アプリのリソースフォルダー]」へ「Modules」というフォルダを作成する //リソースフォルダーへモジュールフォルダーを作成
			もし「[アプリのリソースフォルダー]Modules\NirCmd」というフォルダが存在しないなら「[アプリのリソースフォルダー]\Modules」へ「NirCmd」というフォルダを作成する //モジュールフォルダーへNirCmdフォルダーを作成
		////フォルダーチェック////

		////コンフィグの設定&読み込み////
			コンフィグのファイル名=「[アプリのコンフィグフォルダーの絶対パス]Config.ini」
			メインコンフィグ管理器で「App」をメインコンフィグアプリ情報項目としてコンフィグチェックする //アプリ情報をコンフィグへ書き込み
			メインコンフィグ管理器で「Settings」をメインコンフィグ設定項目としてコンフィグチェックする //初期設定項目を書き込み (既に設定されている項目は上書きしない)
			メインコンフィグ設定=コンフィグについて「Settings」からすべて取得したもの //コンフィグから設定項目を読み込み
		////コンフィグの設定&読み込み////

		////プリセットの読み込み////
			//元作品タイトルプリセットのファイル情報を設定
			元作品タイトルプリセットのプリセットファイル=プリセットファイルというファイル情報(「[アプリのプリセットフォルダー]MIRAIFilenameGeneratorPreset_[ファイル管理器のメインコンフィグ設定から「FilenameGenerator.Preset.Genre.Name」を得たもの].json」)を作ったもの
			//拡張子プリセットのファイル情報を設定
			拡張子プリセットのプリセットファイル=プリセットファイルというファイル情報(「[アプリのプリセットフォルダー]MIRAIFilenameExtensionPreset.json」)を作ったもの
			
			//プリセットファイルが存在しない場合、初期値から作成する
				//元作品タイトルプリセットファイル(ゲーム)
				もし元作品タイトルプリセットのプリセットファイルが存在しないなら
					元作品タイトルプリセットの初期プリセットをJSON形式として整形して書き出したものを元作品タイトルプリセットのプリセットファイルの絶対パスへ保存する
				もし終わり
				//拡張子プリセットファイル
				もし拡張子プリセットのプリセットファイルが存在しないなら
					拡張子プリセットの初期プリセットをJSON形式として整形して書き出したものを拡張子プリセットのプリセットファイルの絶対パスへ保存する
				もし終わり
			
			//プリセットファイルを読み込み(設定項目=プリセット)
				//元作品タイトルプリセット
				元作品タイトルプリセットのプリセット=[元作品タイトルプリセットのプリセットファイルから読み込んだもの]をJSON形式として読み取ったもの
				//拡張子プリセット
				拡張子プリセットのプリセット=[拡張子プリセットのプリセットファイルから読み込んだもの]をJSON形式として読み取ったもの
			
			//元作品タイトルプリセットの一覧をフォルダーから取得
			元作品タイトルプリセットのプリセットファイル一覧={}
			アプリのプリセットフォルダーのファイル一覧をファイルへそれぞれ繰り返す
				もしファイルの名前が「MIRAIFilenameGeneratorPreset_」で始まるかつファイルの名前の拡張子だけが「json」なら
					元作品タイトルプリセットのプリセットファイル一覧へファイルの絶対パスを追加する
				もし終わり
			繰り返し終わり
			元作品タイトルプリセットのプリセットファイル一覧を名前順に並び替える
		////プリセットの読み込み////
	終わり

	自分でコンフィグ保存手順
		ファイル管理器のメインコンフィグ設定の見出しを設定内容へそれぞれ繰り返す
			コンフィグについて「Settings」で設定内容へファイル管理器のメインコンフィグ設定(設定内容)を設定する
		繰り返し終わり
	終わり
終わり