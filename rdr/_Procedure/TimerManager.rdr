タイマー管理器とは
	単一種類
	
	+設定時数:整数
	+設定分数:整数
	+設定秒数:整数
	-残り時間:日時期間形式
	+再生停止=×
	+実行中=×
	-効果音ファイル名
	-効果音エイリアス名=「[プログラムのタイトル]QuickTimerSound」
	
	はじめの手順
		効果音ファイル名=ファイル管理器のクイックタイマー設定から「Sound.Path」を得たもの
		メインタイマーというタイマーを作る
		メインタイマーの間隔=1000
		メインタイマーの時間になった時の手順は、自分でタイマーカウントする
		残り時間という日時期間形式を作る
	終わり
	
	自分でタイマー開始する手順
		残り時間の内容=「[設定時数]:[設定分数]:[設定秒数]」
			デバッグ画面で「[[][自分][]] クイックタイマー設定時間: [設定時数]:[設定分数]:[設定秒数]」をデバッグ出力する
			デバッグ画面で「[[][自分][]] クイックタイマー設定時間(合計秒数): [残り時間の合計秒数]」をデバッグ出力する
		もし残り時間の合計秒数が0なら //指定された時間が0秒以下なら、警告メッセージを表示してタイマーの開始をキャンセルする
			「0秒以下の時を刻むことはできません！」を警告アイコンで表示する
			手順から抜け出す
		もし終わり
		再生停止=×
		ウィンドウ部品無効化する
		メイン画面のラベル22の内容を「[残り時間の時間を「00」に整えたもの]:[残り時間の分数を「00」に整えたもの]:[残り時間の秒数を「00」に整えたもの]」に変える
		メイン画面のボタン11の内容を「クイックタイマー[改行]＜[残り時間の時間を「00」に整えたもの]:[残り時間の分数を「00」に整えたもの]:[残り時間の秒数を「00」に整えたもの]＞」に変える
		通知領域アイコンのクイックタイマー項目の内容を「クイックタイマー ＜[残り時間の時間を「00」に整えたもの]:[残り時間の分数を「00」に整えたもの]:[残り時間の秒数を「00」に整えたもの]＞」に変える
		
		通知バナー画面で「設定時間: [残り時間の時間を「00」に整えたもの]:[残り時間の分数を「00」に整えたもの]:[残り時間の秒数を「00」に整えたもの]」を「タイマーを開始しました」として5秒間通知表示する
		実行中=○
		効果音監視開始する
		メインタイマーを開始する
	終わり
	
	自分でタイマー終了する手順
		再生停止=○
		実行中=×
		メインタイマーを停止する
		残り時間の内容=「[設定時数]:[設定分数]:[設定秒数]」
		ウィンドウ部品有効化する
		メイン画面のラベル22の内容を「[残り時間の時間を「00」に整えたもの]:[残り時間の分数を「00」に整えたもの]:[残り時間の秒数を「00」に整えたもの]」に変える
	終わり
	
	自分でタイマーカウントする手順
		もし残り時間の合計秒数が0なら
			タイマー停止スレッドというスレッドを作る。タイマー停止スレッドで『
			メインタイマーを停止する
			
			メイン画面のボタン15を有効にする
			メイン画面のボタン15の内容を「ストップ」に変える
			
			////時間になった時のイベント////
			// ソース: https://docs.utopiat.net/rdr/manual/plugins/multimedia/mci.htm //
			
			//通知バナーを表示
			通知バナー画面で「クリックしてストップ」を「タイマーが時間になりました」として0秒間通知表示する
				通知バナー画面の実行イベント=「「タイマー管理器でタイマー終了する」」
				
				デバッグ画面で「[[][自分][]] MCI:デバイスオープン」をデバッグ出力する
			メディア制御へ「open "[効果音ファイル名]" alias [効果音エイリアス名]」を命令する //MCIデバイスを開く
			繰り返す
				//演奏を始める
					デバッグ画面で「[[][自分][]] MCI:再生」をデバッグ出力する
				メディア制御へ「seek [効果音エイリアス名] to start」を命令する //再生位置を先頭へ
				メディア制御へ「play [効果音エイリアス名]」を命令する //再生
				
				//演奏が終わるまで待機する
				デバッグ画面で「[[][自分][]] MCI:再生終了待機」をデバッグ出力する
				繰り返す
					もし[メディア制御から「status [効果音エイリアス名] mode」を取得したもの]が「playing」でないなら、繰り返しから抜け出す
					0.1秒待つ
				繰り返し終わり
				デバッグ画面で「[[][自分][]] MCI:再生終了」をデバッグ出力する
				もし再生停止が○なら繰り返しから抜け出す //再生停止 繰り返しから抜け出す
				1秒待つ
			繰り返し終わり
			////時間になった時のイベント////
			
			自分でタイマー終了する
			手順から抜け出す
			』を実行する
			
		そうでなければ
			残り時間から1秒引く
			
			メイン画面のラベル22の内容を「[残り時間の時間を「00」に整えたもの]:[残り時間の分数を「00」に整えたもの]:[残り時間の秒数を「00」に整えたもの]」に変える
			メイン画面のボタン11の内容を「クイックタイマー[改行]＜[残り時間の時間を「00」に整えたもの]:[残り時間の分数を「00」に整えたもの]:[残り時間の秒数を「00」に整えたもの]＞」に変える
			通知領域アイコンのクイックタイマー項目の内容を「クイックタイマー ＜[残り時間の時間を「00」に整えたもの]:[残り時間の分数を「00」に整えたもの]:[残り時間の秒数を「00」に整えたもの]＞」に変える
						
		もし終わり
	終わり
	
	効果音監視開始する手順
		エラーを無視する
		効果音監視スレッドというスレッドを作る。効果音監視スレッドで『
		繰り返す
			もし再生停止が○なら
				デバッグ画面で「[[][自分][]] MCI:再生停止/デバイスクローズ」をデバッグ出力する
				メディア制御へ「stop [効果音エイリアス名]」を命令する //再生停止
				メディア制御へ「close [効果音エイリアス名]」を命令する //MCIデバイスを閉じる
				繰り返しから抜け出す
			もし終わり
			0.1秒待つ
		繰り返し終わり
		』を実行する
	終わり
	
	ウィンドウ部品無効化する手順
		メイン画面のパネル17を無効にする
		メイン画面のパネル19を無効にする
		メイン画面のボタン15を無効にする
		
		通知領域アイコンのクイックタイマー項目のクイックタイマー1分項目の有効を×に変える
		通知領域アイコンのクイックタイマー項目のクイックタイマー2分項目の有効を×に変える
		通知領域アイコンのクイックタイマー項目のクイックタイマー3分項目の有効を×に変える
		通知領域アイコンのクイックタイマー項目のクイックタイマー4分項目の有効を×に変える
		通知領域アイコンのクイックタイマー項目のクイックタイマー5分項目の有効を×に変える
	終わり
	
	ウィンドウ部品有効化する手順
		メイン画面のパネル17を有効にする
		メイン画面のパネル19を有効にする
		メイン画面のボタン15を有効にする
		メイン画面のボタン15の内容を「スタート」に変える
		メイン画面のボタン11の内容を「クイックタイマー」に変える
		通知領域アイコンのクイックタイマー項目の内容を「クイックタイマー」に変える
		
		通知領域アイコンのクイックタイマー項目のクイックタイマー1分項目の有効を○に変える
		通知領域アイコンのクイックタイマー項目のクイックタイマー2分項目の有効を○に変える
		通知領域アイコンのクイックタイマー項目のクイックタイマー3分項目の有効を○に変える
		通知領域アイコンのクイックタイマー項目のクイックタイマー4分項目の有効を○に変える
		通知領域アイコンのクイックタイマー項目のクイックタイマー5分項目の有効を○に変える
	終わり
終わり